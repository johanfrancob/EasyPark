@page "/principal"
@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations
@using System.Net.Http.Json
@inject HttpClient Http

<MudGrid Class="pa-4" Justify="Justify.FlexStart" AlignItems="AlignItems.Center">
    <MudItem xs="12" sm="9" md="9">
        <MudGrid>
            <MudItem xs="6">
                <MudPaper Class="pa-4" Outlined="true">
                    <MudText Typo="Typo.h6">Motos</MudText>
                    <MudText Typo="Typo.h4" Color="Color.Primary">@motosOcu</MudText>
                </MudPaper>
            </MudItem>

            <MudItem xs="6">
                <MudPaper Class="pa-4" Outlined="true">
                    <MudText Typo="Typo.h6">Carros</MudText>
                    <MudText Typo="Typo.h4" Color="Color.Secondary">@carrosOcu</MudText>
                </MudPaper>
            </MudItem>
        </MudGrid>
    </MudItem>

    <MudItem xs="12" sm="3" md="3" Class="d-flex justify-end align-center">
        <MudButton Variant="Variant.Filled" Color="Color.Primary" Size="Size.Large">
            Nuevo Ingreso
        </MudButton>
    </MudItem>
</MudGrid>


<MudDataGrid T="TblTicketEntradum" MultiSelection="true" Items="@tblTickets" SortMode="SortMode.Multiple"
    Hideable="true">
    <ToolBarContent>
        <MudText Typo="Typo.h6">Periodic Elements</MudText>
        <MudSpacer />
        <MudTextField Placeholder="Search" Adornment="Adornment.Start" Immediate="true"
            AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
    </ToolBarContent>
    <Columns>
        <SelectColumn T="TblTicketEntradum" />
        <PropertyColumn Property="x => x.IdTicket" Title="Nr" Sortable="false" Filterable="false" />
        <PropertyColumn Property="x => x.Placa" />
        <PropertyColumn Property="x => x.IdBahia" />
    </Columns>
    <PagerContent>
        <MudDataGridPager T="TblTicketEntradum" />
    </PagerContent>
</MudDataGrid>


@code {

    public class ResumenBahias
    {
        public int bh_disponibles_carro { get; set; }
        public int bh_total_carro { get; set; }
        public int bh_disponibles_moto { get; set; }
        public int bh_total_moto { get; set; }
    }

    private IEnumerable<TblTicketEntradum> tblTickets = new List<TblTicketEntradum>();

    string motosOcu = "";
    string carrosOcu = "";

    protected override async Task OnInitializedAsync()
    {
        var resumen = await Http.GetFromJsonAsync<ResumenBahias>("api/bahias/resumen");

        if (resumen is not null)
        {
            motosOcu = $"{resumen.bh_disponibles_moto}/{resumen.bh_total_moto}";
            carrosOcu = $"{resumen.bh_disponibles_carro}/{resumen.bh_total_carro}";
        }

        tblTickets = await Http.GetFromJsonAsync<List<TblTicketEntradum>>("api/Tickets");
    }


}