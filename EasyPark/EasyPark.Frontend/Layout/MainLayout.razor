@inherits LayoutComponentBase
@using EasyPark.Frontend.Services
@using Microsoft.AspNetCore.Components.Authorization

<CascadingAuthenticationState>
    <MudThemeProvider />
    <MudPopoverProvider />
    <MudDialogProvider />
    <MudSnackbarProvider />

    <MudLayout>
        <MudAppBar Class="drawer-azul-rey" Elevation="4">
            <AuthorizeView>
                <Authorized>
                    <MudIconButton Icon="@Icons.Material.Filled.Menu"
                                   Color="Color.Inherit"
                                   Edge="Edge.Start"
                                   OnClick="@ToggleDrawer" />
                </Authorized>
            </AuthorizeView>

            <MudText Typo="Typo.h6" Class="ml-2">EasyPark</MudText>

            <MudSpacer />

            <AuthorizeView>
                <Authorized>
                    <MudButton Variant="Variant.Text"
                               Color="Color.Inherit"
                               StartIcon="@Icons.Material.Filled.Logout"
                               OnClick="Logout">
                        Cerrar sesión
                    </MudButton>
                </Authorized>
            </AuthorizeView>
        </MudAppBar>

        <AuthorizeView>
            <Authorized>
                <MudDrawer @bind-Open="_drawerOpen"
                           MiniVariant="true"
                           Variant="DrawerVariant.Responsive"
                           Elevation="1"
                           Class="drawer-azul-rey">
                    <MudDrawerHeader>
                        <MudText Typo="Typo.h6" Class="ml-2">Menú</MudText>
                    </MudDrawerHeader>
                    <NavMenu />
                </MudDrawer>
            </Authorized>
        </AuthorizeView>

        <MudMainContent>
            <MudContainer MaxWidth="MaxWidth.Medium" Class="mt-4">
                @Body
            </MudContainer>
        </MudMainContent>
    </MudLayout>
</CascadingAuthenticationState>

@code {
    private bool _drawerOpen = false;

    private void ToggleDrawer()
    {
        _drawerOpen = !_drawerOpen;
    }

    [Inject] private AuthService AuthService { get; set; } = default!;
    [Inject] private NavigationManager Navigation { get; set; } = default!;

    private async Task Logout()
    {
        await AuthService.LogoutAsync();
        Navigation.NavigateTo("/", forceLoad: true);
    }
}
