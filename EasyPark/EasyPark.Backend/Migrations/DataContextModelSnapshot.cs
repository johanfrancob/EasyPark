// <auto-generated />
using System;
using EasyPark.Backend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EasyPark.Backend.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EasyPark.Shared.Entities.TblBahium", b =>
                {
                    b.Property<int>("IdBahia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idBahia");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdBahia"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("estado");

                    b.Property<int>("IdTipoVehiculo")
                        .HasColumnType("int")
                        .HasColumnName("idTipoVehiculo");

                    b.Property<string>("Ubicacion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ubicacion");

                    b.HasKey("IdBahia")
                        .HasName("PK__tblBahia__D875E662473A726D");

                    b.HasIndex("IdTipoVehiculo");

                    b.ToTable("tblBahia", (string)null);
                });

            modelBuilder.Entity("EasyPark.Shared.Entities.TblCliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idCliente");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCliente"));

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("documento");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nombre");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("telefono");

                    b.HasKey("IdCliente")
                        .HasName("PK__tblClien__885457EED54D88BF");

                    b.HasIndex(new[] { "Documento" }, "UQ__tblClien__A25B3E61CB77FCBD")
                        .IsUnique();

                    b.ToTable("tblCliente", (string)null);
                });

            modelBuilder.Entity("EasyPark.Shared.Entities.TblEmpleado", b =>
                {
                    b.Property<int>("IdEmpleado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idEmpleado");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEmpleado"));

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("documento");

                    b.Property<int>("IdRol")
                        .HasColumnType("int")
                        .HasColumnName("idRol");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nombre");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("telefono");

                    b.HasKey("IdEmpleado")
                        .HasName("PK__tblEmple__5295297C75A101A7");

                    b.HasIndex("IdRol");

                    b.HasIndex(new[] { "Documento" }, "UQ__tblEmple__A25B3E61E2847EB6")
                        .IsUnique();

                    b.ToTable("tblEmpleado", (string)null);
                });

            modelBuilder.Entity("EasyPark.Shared.Entities.TblFactura", b =>
                {
                    b.Property<int>("IdFactura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idFactura");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFactura"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("estado");

                    b.Property<DateTime>("FechaHoraSalida")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaHoraSalida");

                    b.Property<int>("IdEmpleado")
                        .HasColumnType("int")
                        .HasColumnName("idEmpleado");

                    b.Property<int>("IdTarifa")
                        .HasColumnType("int")
                        .HasColumnName("idTarifa");

                    b.Property<int>("IdTicket")
                        .HasColumnType("int")
                        .HasColumnName("idTicket");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("monto");

                    b.HasKey("IdFactura")
                        .HasName("PK__tblFactu__3CD5687EC8140890");

                    b.HasIndex("IdEmpleado");

                    b.HasIndex("IdTarifa");

                    b.HasIndex("IdTicket");

                    b.ToTable("tblFactura", (string)null);
                });

            modelBuilder.Entity("EasyPark.Shared.Entities.TblRol", b =>
                {
                    b.Property<int>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idRol");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRol"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nombre");

                    b.HasKey("IdRol")
                        .HasName("PK__tblRol__3C872F763E176C2C");

                    b.ToTable("tblRol", (string)null);
                });

            modelBuilder.Entity("EasyPark.Shared.Entities.TblTarifa", b =>
                {
                    b.Property<int>("IdTarifa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idTarifa");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTarifa"));

                    b.Property<int>("IdTipoVehiculo")
                        .HasColumnType("int")
                        .HasColumnName("idTipoVehiculo");

                    b.Property<decimal>("ValorHora")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("valorHora");

                    b.HasKey("IdTarifa")
                        .HasName("PK__tblTarif__550711E1484930E6");

                    b.HasIndex("IdTipoVehiculo");

                    b.ToTable("tblTarifa", (string)null);
                });

            modelBuilder.Entity("EasyPark.Shared.Entities.TblTicketEntradum", b =>
                {
                    b.Property<int>("IdTicket")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idTicket");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTicket"));

                    b.Property<DateTime>("FechaHoraEntrada")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaHoraEntrada")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("IdBahia")
                        .HasColumnType("int")
                        .HasColumnName("idBahia");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int")
                        .HasColumnName("idCliente");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("placa");

                    b.HasKey("IdTicket")
                        .HasName("PK__tblTicke__22B1456FAB399D60");

                    b.HasIndex("IdBahia");

                    b.HasIndex("IdCliente");

                    b.HasIndex("Placa");

                    b.ToTable("tblTicketEntrada", (string)null);
                });

            modelBuilder.Entity("EasyPark.Shared.Entities.TblTipoVehiculo", b =>
                {
                    b.Property<int>("IdTipoVehiculo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idTipoVehiculo");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoVehiculo"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nombre");

                    b.HasKey("IdTipoVehiculo")
                        .HasName("PK__tblTipoV__429A3B81E89B4C0B");

                    b.HasIndex(new[] { "Nombre" }, "UQ__tblTipoV__72AFBCC6388796A6")
                        .IsUnique();

                    b.ToTable("tblTipoVehiculo", (string)null);
                });

            modelBuilder.Entity("EasyPark.Shared.Entities.TblUsuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idUsuario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("contrasena");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("estado");

                    b.Property<int>("IdEmpleado")
                        .HasColumnType("int")
                        .HasColumnName("idEmpleado");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nombre");

                    b.HasKey("IdUsuario")
                        .HasName("PK__tblUsuar__645723A68F139248");

                    b.HasIndex("IdEmpleado");

                    b.ToTable("tblUsuario", (string)null);
                });

            modelBuilder.Entity("EasyPark.Shared.Entities.TblVehiculo", b =>
                {
                    b.Property<string>("Placa")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("placa");

                    b.Property<string>("Color")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("color");

                    b.Property<int>("IdTipoVehiculo")
                        .HasColumnType("int")
                        .HasColumnName("idTipoVehiculo");

                    b.Property<string>("Marca")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("marca");

                    b.HasKey("Placa")
                        .HasName("PK__tblVehic__0C05742446CA4711");

                    b.HasIndex("IdTipoVehiculo");

                    b.ToTable("tblVehiculo", (string)null);
                });

            modelBuilder.Entity("EasyPark.Shared.Entities.TblBahium", b =>
                {
                    b.HasOne("EasyPark.Shared.Entities.TblTipoVehiculo", "IdTipoVehiculoNavigation")
                        .WithMany("TblBahia")
                        .HasForeignKey("IdTipoVehiculo")
                        .IsRequired()
                        .HasConstraintName("FK_Bahia_Tipo");

                    b.Navigation("IdTipoVehiculoNavigation");
                });

            modelBuilder.Entity("EasyPark.Shared.Entities.TblEmpleado", b =>
                {
                    b.HasOne("EasyPark.Shared.Entities.TblRol", "IdRolNavigation")
                        .WithMany("TblEmpleados")
                        .HasForeignKey("IdRol")
                        .IsRequired()
                        .HasConstraintName("FK_Rol_Empleado");

                    b.Navigation("IdRolNavigation");
                });

            modelBuilder.Entity("EasyPark.Shared.Entities.TblFactura", b =>
                {
                    b.HasOne("EasyPark.Shared.Entities.TblEmpleado", "IdEmpleadoNavigation")
                        .WithMany("TblFacturas")
                        .HasForeignKey("IdEmpleado")
                        .IsRequired()
                        .HasConstraintName("FK_Factura_Empleado");

                    b.HasOne("EasyPark.Shared.Entities.TblTarifa", "IdTarifaNavigation")
                        .WithMany("TblFacturas")
                        .HasForeignKey("IdTarifa")
                        .IsRequired()
                        .HasConstraintName("FK_Factura_Tarifa");

                    b.HasOne("EasyPark.Shared.Entities.TblTicketEntradum", "IdTicketNavigation")
                        .WithMany("TblFacturas")
                        .HasForeignKey("IdTicket")
                        .IsRequired()
                        .HasConstraintName("FK_Factura_Ticket");

                    b.Navigation("IdEmpleadoNavigation");

                    b.Navigation("IdTarifaNavigation");

                    b.Navigation("IdTicketNavigation");
                });

            modelBuilder.Entity("EasyPark.Shared.Entities.TblTarifa", b =>
                {
                    b.HasOne("EasyPark.Shared.Entities.TblTipoVehiculo", "IdTipoVehiculoNavigation")
                        .WithMany("TblTarifas")
                        .HasForeignKey("IdTipoVehiculo")
                        .IsRequired()
                        .HasConstraintName("FK_Tarifa_Tipo");

                    b.Navigation("IdTipoVehiculoNavigation");
                });

            modelBuilder.Entity("EasyPark.Shared.Entities.TblTicketEntradum", b =>
                {
                    b.HasOne("EasyPark.Shared.Entities.TblBahium", "IdBahiaNavigation")
                        .WithMany("TblTicketEntrada")
                        .HasForeignKey("IdBahia")
                        .IsRequired()
                        .HasConstraintName("FK_Ticket_Bahia");

                    b.HasOne("EasyPark.Shared.Entities.TblCliente", "IdClienteNavigation")
                        .WithMany("TblTicketEntrada")
                        .HasForeignKey("IdCliente")
                        .IsRequired()
                        .HasConstraintName("FK_Ticket_Cliente");

                    b.HasOne("EasyPark.Shared.Entities.TblVehiculo", "PlacaNavigation")
                        .WithMany("TblTicketEntrada")
                        .HasForeignKey("Placa")
                        .IsRequired()
                        .HasConstraintName("FK_Ticket_Vehiculo");

                    b.Navigation("IdBahiaNavigation");

                    b.Navigation("IdClienteNavigation");

                    b.Navigation("PlacaNavigation");
                });

            modelBuilder.Entity("EasyPark.Shared.Entities.TblUsuario", b =>
                {
                    b.HasOne("EasyPark.Shared.Entities.TblEmpleado", "IdEmpleadoNavigation")
                        .WithMany("TblUsuarios")
                        .HasForeignKey("IdEmpleado")
                        .IsRequired()
                        .HasConstraintName("FK_Usuario_Empleado");

                    b.Navigation("IdEmpleadoNavigation");
                });

            modelBuilder.Entity("EasyPark.Shared.Entities.TblVehiculo", b =>
                {
                    b.HasOne("EasyPark.Shared.Entities.TblTipoVehiculo", "IdTipoVehiculoNavigation")
                        .WithMany("TblVehiculos")
                        .HasForeignKey("IdTipoVehiculo")
                        .IsRequired()
                        .HasConstraintName("FK_Vehiculo_Tipo");

                    b.Navigation("IdTipoVehiculoNavigation");
                });

            modelBuilder.Entity("EasyPark.Shared.Entities.TblBahium", b =>
                {
                    b.Navigation("TblTicketEntrada");
                });

            modelBuilder.Entity("EasyPark.Shared.Entities.TblCliente", b =>
                {
                    b.Navigation("TblTicketEntrada");
                });

            modelBuilder.Entity("EasyPark.Shared.Entities.TblEmpleado", b =>
                {
                    b.Navigation("TblFacturas");

                    b.Navigation("TblUsuarios");
                });

            modelBuilder.Entity("EasyPark.Shared.Entities.TblRol", b =>
                {
                    b.Navigation("TblEmpleados");
                });

            modelBuilder.Entity("EasyPark.Shared.Entities.TblTarifa", b =>
                {
                    b.Navigation("TblFacturas");
                });

            modelBuilder.Entity("EasyPark.Shared.Entities.TblTicketEntradum", b =>
                {
                    b.Navigation("TblFacturas");
                });

            modelBuilder.Entity("EasyPark.Shared.Entities.TblTipoVehiculo", b =>
                {
                    b.Navigation("TblBahia");

                    b.Navigation("TblTarifas");

                    b.Navigation("TblVehiculos");
                });

            modelBuilder.Entity("EasyPark.Shared.Entities.TblVehiculo", b =>
                {
                    b.Navigation("TblTicketEntrada");
                });
#pragma warning restore 612, 618
        }
    }
}
